//
// Usage:
// SMILExtract -C thisconfig.conf -I input.wav -O output.arff 
//
 
///////////////////////////////////////////////////////////////////////////////////////
;
; This section is always required in openSMILE configuration files
;   it configures the componentManager and gives a list of all components which are to be loaded
; The order in which the components are listed should match 
;   the order of the data flow for most efficient processing
;
///////////////////////////////////////////////////////////////////////////////////////
[componentInstances:cComponentManager]
 ; this line configures the default data memory:
instance[dataMemory].type=cDataMemory
 ;;; wave file input
instance[waveIn].type=cWaveSource
instance[framer].type = cFramer
instance[winframes].type = cWindower
instance[fft].type = cTransformFFT
instance[FFTmagphase].type = cFFTmagphase

# F0, Jitter, Shimmer
instance[scale].type=cSpecScale
instance[pitchShs].type=cPitchShs
instance[pitchSmooth].type=cPitchSmoother
instance[pitchJitter].type=cPitchJitter

# Mel
instance[melspec].type = cMelspec
instance[mfcc].type = cMfcc

# HNR
instance[acf].type = cAcf
instance[cepstrum].type = cAcf
instance[hnr].type = cPitchACF


instance[csvSink].type = cCsvSink


printLevelStats = 1
 // Auto threads
nThreads = 0


/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////   component configuration  ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
; the following sections configure the components listed above
; a help on configuration parameters can be obtained with 
;  SMILExtract -H
; or
;  SMILExtract -H configTypeName (= componentTypeName)
/////////////////////////////////////////////////////////////////////////////////////////////

[waveIn:cWaveSource]
; this sets the level this component writes to
; the level will be created by this component
; no other components may write to a level having the same name
writer.dmLevel=wave
buffersize_sec = 5.0
filename=\cm[inputfile(I){test.wav}:input wav file]
; this defines a new commandline option "-I" or "-inputfile", which can be used to specify 
; the filename on the commandline instead of having it "hard-coded" in the config file
basePeriod = -1
properTimestamps = 1
monoMixdown = 1
start = 0
end = -1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[framer:cFramer]
reader.dmLevel = wave
writer.dmLevel = frames
copyInputName = 1
frameMode = fixed
frameSize = 0.042
frameStep = 0.021
frameCenterSpecial = left

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[winframes:cWindower]
reader.dmLevel=frames
writer.dmLevel=winframes
copyInputName = 1
EOIlevel = 0
processArrayFields = 1
includeSingleElementFields = 0
preserveFieldNames = 1
gain = 1
offset = 0
xscale = 1
xshift = 0
winFunc = Han
sigma = 0.400000
alpha = 0.160000

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[fft:cTransformFFT]
reader.dmLevel=winframes
writer.dmLevel=fft
copyInputName = 1
processArrayFields = 1
inverse = 0
 ; for compatibility with 2.2.0 and older versions
zeroPadSymmetric = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[FFTmagphase:cFFTmagphase]
reader.dmLevel=fft
writer.dmLevel=fftmag
copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[scale:cSpecScale]
reader.dmLevel=fftmag
writer.dmLevel=hps
scale=octave
sourceScale = lin
specSmooth = 0
auditoryWeighting = 0
specEnhance = 0
minF = 20
maxF = -1
nPointsTarget = 0
specSmooth = 1
specEnhance = 1
auditoryWeighting = 1
interpMethod = spline

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[pitchShs:cPitchShs]
reader.dmLevel=hps
writer.dmLevel=pitchShs
inputFieldSearch = fftMag_octScale
F0raw = 0
voicingClip = 0
voicingC1=0
scores=1
voicing=1
nCandidates = 6
octaveCorrection = 0
greedyPeakAlgo = 1
compressionFactor = 0.85
nHarmonics = 15
voicingCutoff = 0.70
maxPitch = 620
minPitch = 52

# F0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[pitchSmooth:cPitchSmoother]
reader.dmLevel=pitchShs
writer.dmLevel=pitch
F0raw = 1
F0final = 1
F0finalEnv = 1
voicingFinalUnclipped = 0
medianFilter0 = 0
postSmoothingMethod = simple
;simple
octaveCorrection = 0
writer.levelconf.nT=10
;writer.levelconf.noHang=2
writer.levelconf.isRb=0
writer.levelconf.growDyn=1


// # F0
// ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
// [pitchSmooth2:cPitchSmoother]
// reader.dmLevel=pitchShs
// writer.dmLevel=pitchF
// F0raw = 0
// F0final = 1
// F0finalEnv = 1
// voicingFinalUnclipped = 1
// medianFilter0 = 0
// postSmoothingMethod = simple
// ;simple
// octaveCorrection = 0
// writer.levelconf.nT=10
// ;writer.levelconf.noHang=2
// writer.levelconf.isRb=0
// writer.levelconf.growDyn=1

# Jitter & Shimmer
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[pitchJitter:cPitchJitter]
reader.dmLevel = wave
writer.dmLevel = jitter
// \{\cm[bufferModeRbLagConf{../tools/opensmile-3.0-win-x64/config/shared/BufferModeRb.conf.inc}:path to included config to set the buffer mode for levels which will be joint with Viterbi smoothed -lagged- F0]}
copyInputName = 1
F0reader.dmLevel = pitch
F0field = F0final
searchRangeRel = 0.200000
jitterLocal = 1
jitterDDP = 1
jitterLocalEnv = 0
jitterDDPEnv = 0
shimmerLocal = 1
shimmerLocalEnv = 1
onlyVoiced = 0
;periodLengths = 0
;periodStarts = 0
inputMaxDelaySec = 1
usePeakToPeakPeriodLength = 0
shimmerUseRmsAmplitude = 0
minCC = 0.5
minNumPeriods = 2

# MFC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[melspec:cMelspec]
reader.dmLevel = fftmag
writer.dmLevel = melspec
copyInputName = 1
processArrayFields = 1
includeSingleElementFields = 0
preserveFieldNames = 1
nBands = 26
lofreq = 0
hifreq = 8000
usePower = 1
htkcompatible = 1
lofreq = 0
hifreq = 8000
specScale = mel
inverse = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[mfcc:cMfcc]
reader.dmLevel = melspec
writer.dmLevel = mfcc
htkcompatible = 0
firstMfcc=0
lastMfcc=14
cepLifter=22
copyInputName = 0


# HNR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[acf:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=acf
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 0
acfCepsNormOutput = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[cepstrum:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=cepstrum
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 1
acfCepsNormOutput = 0
oldCompatCepstrum = 1
absCepstrum = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[hnr:cPitchACF]
  ; the pitchACF component must ALWAYS read from acf AND cepstrum in the given order!
reader.dmLevel=acf;cepstrum
writer.dmLevel=hnr
copyInputName = 1
processArrayFields = 0
maxPitch = 500
voiceProb = 0
voiceQual = 0
HNR = 1
F0 = 0
F0raw = 0
F0env = 0
voicingCutoff = 0.550000







;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[csvSink:cCsvSink]
; CHANGE COLUMNS !!!!!
; lld --> F0, pitch and intensity smoothed
; melspec --> Mel Frequency

reader.dmLevel=pitch;melspec;mfcc;jitter;hnr
filename=\cm[outputfile(O){output.csv}:output filename]
delimChar = ,
append=0
frameIndex= 1
frameTime= 1
errorOnNoOutput = 1
printHeader = 1
